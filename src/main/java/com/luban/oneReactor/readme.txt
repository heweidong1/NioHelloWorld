单线程Reactor  主要存在着 附加对象

因为附加对象的存在  就不需要在对事件进行判断从而进行不同的处理

利用附加对象
  比如在声明服务器的时候  将服务器注册到select中是 声明附加对象【存在处理逻辑run()】
  当第一次发生事件，肯定是连接事件  拿到附加对象调用run逻辑

  服务器附加对象 逻辑：
   当客户端连接时声明客户端  注册到select也创建附加对象【每个客户端都有自己的附加对象，在声明客户端的附加
   对象的时候，要将客户端对象赋值进去】

  当下次循环的时候，如果客户端发来消息，拿到附加对象，直接调用run(),
  执行逻辑。

  该例子中：TCPReactor是循环监听事件，Acceptor是服务器的附加对象 TCPHandler是客户端的附加对象


  ** 附加对象是和事件绑定在一起的【例如：A客户端连接后，在创建附加对象的时候，会将A客户端对象赋值到附加对象中
                               这样做，当A客户端监听的读事件发生，就会拿到A客户端的附加对象，从而获取的A客户端对象】


细节重点：
   selector.select() 当没有事件发生的时候 会一直堵塞
   sk.selector().wakeup();|| selector.wakeup();  使一個阻塞住的selector操作立即返回

   本例中这样做的目的  是当服务器 向select中注册了一个客户端 使一個阻塞住的selector操作立即返回，相当于刷新
   因为监听的事件发生了变化





